{"version":3,"file":"static/js/832.ef2caebd.chunk.js","mappings":"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","sources":["Components/Teacher/ExamMark.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'  \nimport {useForm} from \"react-hook-form\" \nimport DataTable from 'react-data-table-component'\nimport {toast} from 'react-toastify'\n//import {ThreeDots} from 'react-loader-spinner'   \n\nimport {useLazyListQuery, useAddExamMarkMutation, useParticularExamMarkMutation} from '../../redux/api/StudentApi.js' \nimport {useLazyListQuery as useLazyExamListQuery} from '../../redux/api/ExamApi.js'\nimport {useLazyListQuery as useLazyClassListQuery} from '../../redux/api/ClassApi.js'\n\nexport default function ExamMark() {\n    const [pageName] = useState([{\n        title_1 : 'ADD EXAM MARK',\n        title_2 : 'DELETE SELECTED EXAM MARK',\n        title_3 : \"EDIT EXAM MARK\",\n        title_4 : \"EXAM MARK\",\n        title_5 : \"ADD-MANAGE EXAM MARK'S\",\n    }])\n\n    const [data,setData] = useState([]) \n    const [markData,setMarkData] = useState([]) \n    const [commentData,setCommentData] = useState([]) \n    const [examData,setExamData] = useState([]) \n    const [classData,setClassData] = useState([]) \n    const [sectionData,setSectionData] = useState([])\n    const [subjectData,setSubjectData] = useState([]) \n    //const [dataID, setDataID] = useState(0) \n    const [classID, setClassID] = useState(0) \n    const [sectionID, setSectionID] = useState(0) \n    const [examID, setExamID] = useState(0) \n    const [subjectID, setSubjectID] = useState(0) \n    const [loaderVisible,setLoaderVisible] = useState(true)     \n\n    const {register, handleSubmit, formState: { errors }} = useForm()\n \n    //const [getAllRecord,{data:getAllValidationRecord}] = useLazyListQuery()\n    const [getAllExamRecord,{data:getAllExamValidationRecord}] = useLazyExamListQuery()\n    const [getAllClassRecord,{data:getAllValidationClassRecord}] = useLazyClassListQuery()\n    const [addMarkRecord] = useAddExamMarkMutation()\n    const [getMarkBaseStudentData] = useParticularExamMarkMutation()\n    \n    const columns = [\n        {\n            name: '#',\n            selector: (row,key) => key+1,\n            width:'50px'\n        },\n        {\n            name: 'Student List',\n            selector: row => row.student_name\n        },\n        {\n            name: 'Mark',\n            selector: row =>  <> \n                <input type=\"number\" className='form-control' defaultValue={row.student_mark_data[0]?.mark_data?.mark} onChange={(e)=>setMarkData(e.target.value)}/> \n            </>\n        },\n        {\n            name: 'Grade point',\n            selector: row => <>A+</>\n        },\n        {\n            name: 'Comment',\n            selector: row => <> \n                <input type=\"text\" className='form-control' defaultValue={row.student_mark_data[0]?.mark_data?.mark_comment} onChange={(e)=>setCommentData(e.target.value)} /> \n            </>\n        },\n        {\n            name: 'Action',\n            selector: row => <div className=\"form-check form-switch\">\n                {\n                    <button className=\"btn btn-success btn-sm\" onClick={(e)=>onSubmitMark(e,row._id,row.student_mark_data[0]?.mark_data)}>Submit</button>\n                    //(row.student_mark_data?.length>0)?<input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>onSubmitMark(e,row._id)} value={1} checked />:<input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>onSubmitMark(e,row._id)} value={1}/>\n                } \n            </div>\n        }\n    ]\n\n    const onSubmitMark = (event,student_id,recordData) => { \n        setLoaderVisible(true)  \n        let is_checked = (recordData === undefined)?1:0\n        \n        console.log('is_checked__',is_checked)\n\n        const data = {\n            mark:markData,\n            mark_comment:commentData,\n            mark_class:classID,\n            mark_section:sectionID,\n            mark_subject:subjectID,\n            mark_exam:examID,\n            is_checked:is_checked?1:0,\n            mark_student_id:student_id, \n            mark_checked:is_checked\n        }  \n       \n        addMarkRecord(data).then((response) => { \n            if(response?.data?.status){\n                toast.success(response.data.message) \n            }else{ \n                toast.error(response.error.data.message) \n            }  \n             \n            const sendUpdateData = {\n                mark_class:classID,\n                mark_section:sectionID,\n                mark_subject:subjectID,\n                exam_id:examID,\n            }  \n            onSubmit(sendUpdateData)// for refresh\n             \n        }).catch((error) => { \n            if (error) \n                toast.error(`Some tehnical issue.`)\n                setLoaderVisible(false)\n        });   \n    } \n    const onSubmit = (data) => { \n        setClassID(data.mark_class)\n        setSectionID(data.mark_section)\n        setSubjectID(data.mark_subject)\n        setExamID(data.exam_id)\n        setData([])\n        const sendData = {\n            class_id:data.mark_class,\n            section_id:data.mark_section,\n            subject_id:data.mark_subject,\n            exam_id:data.exam_id,\n        }\n        getMarkBaseStudentData(sendData).then((response)=>{  \n            setData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    }\n\n    useEffect(()=>{  \n        getAllClassRecord().then((response)=>{ \n            setClassData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    },[getAllValidationClassRecord])\n\n    const updateSectionData = () => {\n        const select_id = document.getElementById('classSelectBox')\n        const select_data = select_id.options[select_id.selectedIndex].id\n        const class_data = JSON.parse(select_data) \n        setSectionData(class_data.class_section)\n        setSubjectData(class_data.class_subject)\n    }\n    useEffect(()=>{\n        getAllExamRecord().then((response)=>{ \n            setExamData(response?.data?.data)  \n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    },[getAllExamValidationRecord])\n    return ( \n        <>  \n            <div className=\"page-body\">\n                {loaderVisible?\n                <div class=\"loader-wrapper\">\n                    <div class=\"theme-loader\">    \n                        <div class=\"loader-p\"></div>\n                    </div>\n                </div>:''} \n                <div className=\"container-fluid\">\n                    <div className=\"page-title\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6 ps-0\"><h3>{pageName[0].title_1}</h3></div>\n                            <div className=\"col-sm-6 pe-0\">\n                                <ol className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\">\n                                        <a href=\"#\">\n                                            <svg className=\"stroke-icon\">\n                                                <use href=\"../assets/svg/icon-sprite.svg#stroke-home\"></use>\n                                            </svg>\n                                        </a>\n                                    </li> \n                                    <li className=\"breadcrumb-item active\">{pageName[0].title_1}</li>\n                                </ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body custom-card-list\">\n                                    <div className=\"list-product-header\"> \n                                        <form method=\"POST\" onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\"> \n                                        <div className=\"row align-left p-4\"> \n                                            <div className=\"col-md-3\">\n                                                <div className=\"form-floating\">\n                                                    <select className=\"form-select\" id=\"floatingSelectGrid\" {...register('exam_id', { required: 'This field is required.' })}> \n                                                        <option value=\"\">Select Exam</option>\n                                                        { (examData)?examData.map((examItem,key)=>{\n                                                            return(  \n                                                                <option value={examItem._id} key={key}>{examItem.exam_name}</option> \n                                                            )}):''\n                                                        }  \n                                                    </select>\n                                                    {errors.exam_id && <span className=\"error-message\">{errors.exam_id.message}</span>}\n                                                    <label for=\"floatingSelectGrid\">\n                                                        Please select exam\n                                                    </label>\n                                                </div>\n                                            </div>  \n                                            <div className=\"col-md-2\">\n                                                <div className=\"form-floating\">\n                                                    <select className=\"form-select\" {...register('mark_class', { required: 'This field is required.' })} onChange={(e)=>{\n                                                                    updateSectionData(e.target.value)\n                                                                    setData([])\n                                                                }} id=\"classSelectBox\">  \n                                                        <option value=\"\">Select Class</option>\n                                                        { (classData)?classData.map((classItem,key)=>{\n                                                            return(  \n                                                                <option id={JSON.stringify(classItem)} value= {classItem._id} key={key}>{classItem.class_name}</option> \n                                                            )}):''\n                                                        }  \n                                                    </select>\n                                                    {errors.mark_class && <span className=\"error-message\">{errors.mark_class.message}</span>}\n                                                    <label for=\"floatingSelectGrid\">\n                                                        Please select class\n                                                    </label>\n                                                </div>\n                                            </div> \n                                            <div className=\"col-md-3\">\n                                                <div className=\"form-floating\">\n                                                    <select className=\"form-select\" id=\"floatingSelectGrid\" {...register('mark_section', { required: 'This field is required.' })}> \n                                                        <option value=\"\">Select Section</option>\n                                                        { (sectionData)?sectionData.map((sectionItem,key)=>{\n                                                            return(  \n                                                                <option value={sectionItem._id} key={key}>{sectionItem.section_name}</option> \n                                                            )}):''\n                                                        }  \n                                                    </select>\n                                                    {errors.mark_section && <span className=\"error-message\">{errors.mark_section.message}</span>}\n                                                    <label for=\"floatingSelectGrid\">\n                                                        Please select section\n                                                    </label>\n                                                </div>\n                                            </div> \n                                            <div className=\"col-md-2\">\n                                                <div className=\"form-floating\">\n                                                        <select className=\"form-select\" id=\"floatingSelectGrid\" {...register('mark_subject', { required: 'This field is required.' })}> \n                                                            <option value=\"\">Select Subject</option>\n                                                            { (subjectData)?subjectData.map((subjectItem,key)=>{\n                                                                return(  \n                                                                    <option value={subjectItem._id} key={key}>{subjectItem.subject_name}</option> \n                                                                )}):''\n                                                            }  \n                                                        </select>\n                                                        {errors.mark_subject && <span className=\"error-message\">{errors.mark_subject.message}</span>}\n                                                    <label for=\"floatingSelectGrid\">\n                                                        Please select subject\n                                                    </label>\n                                                </div>\n                                            </div> \n                                            <div className=\"col-md-2\">\n                                                <div className=\"form-floating\">\n                                                    <button type=\"submit\" className=\"btn btn-success-gradien border-dark me-3\" style={{height:'58px'}}>\n                                                        <b>Mark</b>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div> \n                                        </form>\n                                    </div>\n                                    <div className=\"list-product\">\n                                        <DataTable\n                                            columns={columns}\n                                            data={data}\n                                            pagination \n                                            persistTableHead \n                                        />  \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n        </div>    \n    </>\n    )\n}"],"names":["ExamMark","pageName","useState","title_1","title_2","title_3","title_4","title_5","data","setData","markData","setMarkData","commentData","setCommentData","examData","setExamData","classData","setClassData","sectionData","setSectionData","subjectData","setSubjectData","classID","setClassID","sectionID","setSectionID","examID","setExamID","subjectID","setSubjectID","loaderVisible","setLoaderVisible","register","handleSubmit","formState","errors","useForm","getAllExamRecord","getAllExamValidationRecord","useLazyExamListQuery","getAllClassRecord","getAllValidationClassRecord","useLazyClassListQuery","addMarkRecord","useAddExamMarkMutation","getMarkBaseStudentData","useParticularExamMarkMutation","columns","name","selector","row","key","width","student_name","_row$student_mark_dat","_row$student_mark_dat2","_jsx","_Fragment","children","type","className","defaultValue","student_mark_data","mark_data","mark","onChange","e","target","value","_row$student_mark_dat3","_row$student_mark_dat4","mark_comment","onClick","_row$student_mark_dat5","onSubmitMark","_id","event","student_id","recordData","is_checked","undefined","console","log","mark_class","mark_section","mark_subject","mark_exam","mark_student_id","mark_checked","then","response","_response$data","status","toast","success","message","error","onSubmit","exam_id","catch","sendData","class_id","section_id","subject_id","_response$data2","err","concat","useEffect","_response$data3","_response$data4","_jsxs","class","href","method","encType","id","required","map","examItem","exam_name","for","updateSectionData","select_id","document","getElementById","select_data","options","selectedIndex","class_data","JSON","parse","class_section","class_subject","classItem","stringify","class_name","sectionItem","section_name","subjectItem","subject_name","style","height","DataTable","pagination","persistTableHead"],"sourceRoot":""}