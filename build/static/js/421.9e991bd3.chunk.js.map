{"version":3,"file":"static/js/421.9e991bd3.chunk.js","mappings":"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","sources":["Components/Student/StudentAttendance.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'  \n//import {useForm} from \"react-hook-form\" \nimport DataTable from 'react-data-table-component'\nimport {toast} from 'react-toastify'\n//import {ThreeDots} from 'react-loader-spinner' \n\nimport {useLazyListQuery, useAddAttendanceMutation, useParticularAttendanceMutation} from '../../redux/api/StudentApi.js' \nimport {useLazyListQuery as useLazyClassListQuery} from '../../redux/api/ClassApi.js'\n\nexport default function StudentAttendance() {\n    const [pageName] = useState([{\n        title_1 : 'ADD STUDENT ATTENDANCE',\n        title_2 : 'DELETE SELECTED STUDENT ATTENDANCE',\n        title_3 : \"EDIT STUDENT ATTENDANCE\",\n        title_4 : \"STUDENT ATTENDANCE\",\n        title_5 : \"ADD-MANAGE STUDENT ATTENDANCE'S\",\n    }])\n\n    const [data,setData] = useState([]) \n    const [classData,setClassData] = useState([]) \n    const [sectionData,setSectionData] = useState([]) \n    //const [dataID, setDataID] = useState(0) \n    const [classID, setClassID] = useState(0) \n    const [sectionID, setSectionID] = useState(0) \n    const [loaderVisible,setLoaderVisible] = useState(true)     \n\n    //const {register, control, handleSubmit, formState: { errors }, setValue, reset} = useForm()\n \n    //const [getAllRecord,{data:getAllValidationRecord}] = useLazyListQuery()\n    const [getAllClassRecord,{data:getAllValidationClassRecord}] = useLazyClassListQuery()\n    const [addAttendanceRecord] = useAddAttendanceMutation()\n    const [getAttendanceBaseStudentData] = useParticularAttendanceMutation()\n    \n    const columns = [\n        {\n            name: '#',\n            selector: (row,key) => key+1,\n            width:'50px'\n        },\n        {\n            name: 'Student List',\n            selector: row => row.student_name\n        },\n        {\n            name: 'Attendance',\n            selector: row => <>\n                <div className=\"form-check form-switch\">\n                    {\n                        (row.student_attendance_data?.length>0)?<input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>onSubmitattendance(e,row._id)} value={1} checked />:<input className=\"form-check-input\" type=\"checkbox\" onChange={(e)=>onSubmitattendance(e,row._id)} value={1}/>\n                    } \n                </div>\n            </>\n        },\n    ]\n\n    const onSubmitattendance = (event,student_id) => { \n        setLoaderVisible(true)  \n        let is_checked = event.target.checked\n        \n        const data = {\n            attendance_class:classID,\n            attendance_section:sectionID,\n            is_checked:is_checked?1:0,\n            attendance_student_id:student_id, \n            attendance:(is_checked === 1)?1:0\n        }  \n       \n        addAttendanceRecord(data).then((response) => { \n            if(response?.data?.status){\n                toast.success(response.data.message) \n            }else{ \n                toast.error(response.error.data.message) \n            }   \n            displayStudentRecord(sectionID) // for refresh\n        }).catch((error) => { \n            if (error) \n                toast.error(`Some tehnical issue.`)\n                setLoaderVisible(false)\n        });   \n    }\n\n    const displayStudentRecord = (section_id) => {\n        setSectionID(section_id)\n        setData([])\n        const data = {\n            class_id:classID,\n            section_id:section_id\n        }\n        getAttendanceBaseStudentData(data).then((response)=>{  \n            setData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    }\n\n    useEffect(()=>{  \n        getAllClassRecord().then((response)=>{ \n            setClassData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    },[getAllValidationClassRecord])\n\n    const updateSectionData = (class_array) => {\n        const class_data = JSON.parse(class_array)\n        setClassID(class_data._id) \n        setSectionData(class_data.class_section)\n    }\n\n    return ( \n        <>   \n            <div className=\"page-body\">\n                {loaderVisible?\n                <div class=\"loader-wrapper\">\n                    <div class=\"theme-loader\">    \n                        <div class=\"loader-p\"></div>\n                    </div>\n                </div>:''} \n                <div className=\"container-fluid\">\n                    <div className=\"page-title\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6 ps-0\"><h3>{pageName[0].title_1}</h3></div>\n                            <div className=\"col-sm-6 pe-0\">\n                                <ol className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\">\n                                        <a href=\"#\">\n                                            <svg className=\"stroke-icon\">\n                                                <use href=\"../assets/svg/icon-sprite.svg#stroke-home\"></use>\n                                            </svg>\n                                        </a>\n                                    </li> \n                                    <li className=\"breadcrumb-item active\">{pageName[0].title_1}</li>\n                                </ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body custom-card-list\">\n                                    <div className=\"list-product-header\">  \n                                        <div className=\"row align-left\">  \n                                            <div className=\"col-md-3\">\n                                                <div className=\"form-floating p-1\">\n                                                    <select className=\"form-select b-dark\" id=\"floatingSelectGrid\" onChange={(e)=>{\n                                                                    updateSectionData(e.target.value)\n                                                                    setData([])\n                                                                }}>  \n                                                        <option value=\"\">Select Class</option>\n                                                        { (classData)?classData.map((classItem,key)=>{\n                                                            return(  \n                                                                <option value={JSON.stringify(classItem)} key={key}>{classItem.class_name}</option> \n                                                            )}):''\n                                                        }  \n                                                    </select>\n                                                    <label for=\"floatingSelectGrid\">\n                                                        Please select class\n                                                    </label>\n                                                </div>\n                                            </div> \n                                            <div className=\"col-md-3\">\n                                                <div className=\"form-floating p-1\">\n                                                    <select className=\"form-select  b-dark\" id=\"floatingSelectGrid\" onChange={(e)=>{\n                                                        displayStudentRecord(e.target.value)\n                                                    }}> \n                                                        <option value=\"\">Select Section</option>\n                                                        { (sectionData)?sectionData.map((sectionItem,key)=>{\n                                                            return(  \n                                                                <option value={sectionItem._id} key={key}>{sectionItem.section_name}</option> \n                                                            )}):''\n                                                        }  \n                                                    </select>\n                                                    <label for=\"floatingSelectGrid\">\n                                                        Please select section\n                                                    </label>\n                                                </div>\n                                            </div> \n                                        </div> \n                                    </div>\n                                    <div className=\"list-product\">\n                                        <DataTable\n                                            columns={columns}\n                                            data={data}\n                                            pagination \n                                            persistTableHead \n                                        />  \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n        </div>    \n    </>\n    )\n}"],"names":["StudentAttendance","pageName","useState","title_1","title_2","title_3","title_4","title_5","data","setData","classData","setClassData","sectionData","setSectionData","classID","setClassID","sectionID","setSectionID","loaderVisible","setLoaderVisible","getAllClassRecord","getAllValidationClassRecord","useLazyClassListQuery","addAttendanceRecord","useAddAttendanceMutation","getAttendanceBaseStudentData","useParticularAttendanceMutation","columns","name","selector","row","key","width","student_name","_row$student_attendan","_jsx","_Fragment","children","className","student_attendance_data","length","type","onChange","e","onSubmitattendance","_id","value","checked","event","student_id","is_checked","target","attendance_class","attendance_section","attendance_student_id","attendance","then","response","_response$data","status","toast","success","message","error","displayStudentRecord","catch","section_id","class_id","_response$data2","err","concat","useEffect","_response$data3","_jsxs","class","href","id","class_array","class_data","JSON","parse","class_section","updateSectionData","map","classItem","stringify","class_name","for","sectionItem","section_name","DataTable","pagination","persistTableHead"],"sourceRoot":""}