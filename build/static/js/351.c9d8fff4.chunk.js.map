{"version":3,"file":"static/js/351.c9d8fff4.chunk.js","mappings":"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","sources":["Components/Admin/AddAssignment.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'\nimport {useForm} from \"react-hook-form\"\nimport DataTable from 'react-data-table-component'\nimport {toast} from 'react-toastify'\nimport {Link} from 'react-router-dom'\n//import {ThreeDots} from 'react-loader-spinner'\n\nimport {useAddMutation, useEditMutation, useDeleteMutation, useDeleteBulkMutation, useLazyParticularQuery, useLazyListQuery} from '../../redux/api/AssignmentApi.js' \nimport {useLazyListQuery as useLazyClassListQuery} from '../../redux/api/ClassApi.js' \n\nexport default function AddExamSchedule() {\n    const [pageName] = useState([{\n        title_1 : 'ADD ASSIGNMENT',\n        title_2 : 'DELETE SELECTED ASSIGNMENT',\n        title_3 : \"EDIT ASSIGNMENT\",\n        title_4 : \"ASSIGNMENT\",\n        title_5 : \"ADD-MANAGE ASSIGNMENT'S\",\n    }])\n\n    const [data,setData] = useState([]) \n   // const [examData,setExamData] = useState([]) \n    const [classData,setClassData] = useState([]) \n    const [sectionData,setSectionData] = useState([])\n    const [subjectData,setSubjectData] = useState([]) \n    const [dataID, setDataID] = useState(0) \n    const [bulkRecordID,setBulkRecordID] = useState([])\n    const [deleteDisabled,setDeleteDisabled] = useState(true)\n    const [loaderVisible,setLoaderVisible] = useState(true)  \n    const {register, handleSubmit, formState: { errors }, setValue, reset} = useForm()\n \n    const [addRecord] = useAddMutation() \n    const [editRecord] = useEditMutation()\n    const [deleteRecord] = useDeleteMutation()\n    const [deleteBulkRecord] = useDeleteBulkMutation()\n    const [getAllRecord,{data:getAllValidationRecord}] = useLazyListQuery()\n    const [getParticularRecord] = useLazyParticularQuery()\n \n    const [getAllClassRecord,{data:getAllValidationClassRecord}] = useLazyClassListQuery() \n \n    const columns = [\n        {\n            name: '#',\n            selector: (row,key) => key+1,\n            width:'50px'\n        },\n        {\n            name: 'Assignment Title',\n            selector: row => row.assignment_title\n        },\n        {\n            name: 'Assignment Class',\n            selector: row => {\n                return (\n                    <div>\n                        {row.class_data[0].class_name} - ({row.section_data[0].section_name})\n                    </div>\n                )\n            }\n        },\n        {\n            name: 'Assignment Subject',\n            selector: row => row.subject_data[0].subject_name\n        },\n        {\n            name: 'Status',\n            selector: row => (row.is_active === 1)?<span className=\"badge rounded-pill badge-success me-1\">Active</span>:<span className=\"badge rounded-pill badge-danger me-1\">De-active</span>,\n        },\n        {\n            name: 'Action',\n            selector: row => <>  \n                <i className=\"icofont icofont-ui-edit me-2 edit-link-custom\" onClick={()=>{openEditModal(row._id)}} title=\"Edit record\"></i> \n                <i className=\"icofont icofont-ui-delete me-2 delete-link-custom\" onClick={()=>{   \n                    deleteData(row._id) \n                    setLoaderVisible(true)\n                }} title=\"Delete record\"></i> \n            </>\n        },\n    ]\n    const resetSubmit = () => {  \n        reset() \n        setDataID(0)\n        document.getElementById('close-modal').click()\n        setLoaderVisible(false)\n    }\n    const onSubmit = (data) => { \n        if(dataID === 0){\n            addRecord(data).then((response)=>{\n                if(response?.data?.status){  \n                    toast.success(response.data.message) \n                }else{ \n                    toast.error(response.error.data.message) \n                }\n            }).catch((err)=>{ \n                toast.error(`Error : ${err.message}`)\n            })\n            resetSubmit()\n        }else{ \n            editRecord({dataID,...data}).then((response)=>{\n                if(response?.data?.status){  \n                    toast.success(response.data.message) \n                }else{ \n                    toast.error(response.error.data.message) \n                } \n            }).catch((err)=>{\n                toast.error(`Error : ${err.message}`)\n                setLoaderVisible(false)\n            })\n            resetSubmit()\n        }\n    }\n\n    const openEditModal = async (record_id) => {   \n        setDataID(record_id) \n        document.getElementById('open-modal').click() \n        getParticularRecord(record_id).then((response)=>{  \n            setValue(\"assignment_title\", response.data.data.assignment_title) \n            setValue(\"assignment_description\", response.data.data.assignment_description)  \n            setValue(\"assignment_class\", response.data.data.assignment_class)   \n            setValue(\"assignment_deadline\", response.data.data.assignment_deadline)  \n            setValue(\"is_active\", response.data.data.is_active) \n            updateSectionData()\n            setTimeout(() => {\n                setValue(\"assignment_section\", response.data.data.assignment_section)  \n                setValue(\"assignment_subject\", response.data.data.assignment_subject)\n            }, 300)\n        }).catch((err)=>{\n            toast.error(`Error : ${err.message}`)\n            setLoaderVisible(false)\n        })\n    }\n    const deleteData = async (record_id) => {\n        let text = \"Are you sure to delete this record?\";\n        if(window.confirm(text) === true) {\n            deleteRecord(record_id).then((response)=>{\n                if(response?.data?.status){  \n                    toast.success(response.data.message)\n                    setLoaderVisible(false)\n                }else{ \n                    toast.error(response.error.data.message) \n                }\n            }).catch((err)=>{ \n                toast.error(`Error : ${err.message}`)\n            })\n        }\n    }\n    const deleteBulkData = async () => {\n        let text = \"Are you sure to delete this record?\";\n        if(window.confirm(text) === true) {\n            deleteBulkRecord(bulkRecordID).then((response)=>{\n                if(response?.data?.status){\n                    toast.success(response.data.message)\n                    setLoaderVisible(false)\n                    setDeleteDisabled(true)\n                }else{ \n                    toast.error(response.error.data.message) \n                }\n            }).catch((err)=>{ \n                toast.error(`Error : ${err.message}`)\n            })\n        }\n    }\n    \n    useEffect(()=>{  \n        getAllRecord().then((response)=>{ \n            setData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    },[getAllValidationRecord])\n\n    const handleChange = ({ selectedRows }) => {\n        setDeleteDisabled(true)\n        let selected_value = []\n        selectedRows.map((data)=>{\n            selected_value.push(data._id)\n        })\n        if(selected_value.length>0){\n            setDeleteDisabled(false)\n        }\n        setBulkRecordID(selected_value) \n    }\n    \n    useEffect(()=>{  \n        getAllClassRecord().then((response)=>{ \n            setClassData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    },[getAllValidationClassRecord])\n\n    const updateSectionData = () => { \n        const select_id = document.getElementById('classSelectBox')\n        const select_data = select_id.options[select_id.selectedIndex].id\n        const class_data = JSON.parse(select_data) \n        setSectionData(class_data.class_section)\n        setSubjectData(class_data.class_subject)\n    }\n  \n    return ( \n        <>   \n            <div className=\"page-body\">\n                {loaderVisible?\n                <div class=\"loader-wrapper\">\n                    <div class=\"theme-loader\">    \n                        <div class=\"loader-p\"></div>\n                    </div>\n                </div>:''} \n                <div className=\"container-fluid\">\n                    <div className=\"page-title\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6 ps-0\"><h3>{pageName[0].title_1}</h3></div>\n                            <div className=\"col-sm-6 pe-0\">\n                                <ol className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\">\n                                        <Link to=\"#\">\n                                            <svg className=\"stroke-icon\">\n                                                <use href=\"../assets/svg/icon-sprite.svg#stroke-home\"></use>\n                                            </svg>\n                                        </Link>\n                                    </li> \n                                    <li className=\"breadcrumb-item active\">{pageName[0].title_1}</li>\n                                </ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body custom-card-list\">\n                                    <div className=\"list-product-header\">\n                                        <div>   \n                                            {(!deleteDisabled)?\n                                            <button className=\"btn btn-danger-gradien btn-sm\" type=\"button\" onClick={()=> { deleteBulkData() \n                                            setLoaderVisible(true) } } disabled={deleteDisabled}>\n                                                <b>\n                                                    <i className=\"fa fa-minus\"></i>&nbsp; {pageName[0].title_2}\n                                                </b>\n                                            </button> \n                                            :''}\n\n                                            <button className=\"btn btn-primary-gradien btn-sm\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\".bd-example-modal-fullscreen\" id=\"open-modal\" onClick={()=>reset()}>\n                                                <b> \n                                                    <i className=\"fa fa-plus\"></i>&nbsp; {pageName[0].title_1}\n                                                </b>\n                                            </button> \n                                        </div> \n                                    </div>\n                                    <div className=\"list-product\">\n                                        <DataTable\n                                            columns={columns}\n                                            data={data}\n                                            pagination\n                                            selectableRows\n                                            onSelectedRowsChange={handleChange}  \n                                            persistTableHead \n                                        />  \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n                    \n                <div className=\"modal fade bd-example-modal-fullscreen\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myFullLargeModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-fullscreen\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\" id=\"myFullLargeModalLabel\">{pageName[0].title_5}</h4>\n                            <button className=\"btn-close py-1\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\" id=\"close-modal\" onClick={()=>{setDataID(0)}}></button>\n                        </div>\n                        <div className=\"modal-body dark-modal\"> \n                            <div className=\"row border-dark\">\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-body\">\n                                            <form method=\"POST\" onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n                                                <div className=\"form theme-form-old\">\n                                                    <div className=\"row\"> \n                                                        <div className=\"col-md-6\">\n                                                            <div className=\"mb-3\">\n                                                                <label>Assignment Class</label>\n                                                                <select className=\"form-select\" {...register('assignment_class', { required: 'This field is required.' })} onChange={(e)=>{\n                                                                            updateSectionData(e.target.value)\n                                                                        }} id=\"classSelectBox\">  \n                                                                    <option value=\"\">Select Class</option>\n                                                                    { (classData)?classData.map((classItem,key)=>{\n                                                                        return(  \n                                                                            <option id={JSON.stringify(classItem)} value= {classItem._id} key={key}>{classItem.class_name}</option> \n                                                                        )}):''\n                                                                    }  \n                                                                </select>\n                                                                {errors.assignment_class && <span className=\"error-message\">{errors.assignment_class.message}</span>}\n                                                            </div>\n                                                        </div>  \n                                                        <div className=\"col-md-6\">\n                                                            <div className=\"mb-3\">\n                                                                <label>Assignment Section</label>\n                                                                <select className=\"form-select\" id=\"floatingSelectGrid\" {...register('assignment_section', { required: 'This field is required.' })}> \n                                                                    <option value=\"\">Select Section</option>\n                                                                    { (sectionData)?sectionData.map((sectionItem,key)=>{\n                                                                        return(  \n                                                                            <option value={sectionItem._id} key={key}>{sectionItem.section_name}</option> \n                                                                        )}):''\n                                                                    }  \n                                                                </select>\n                                                                {errors.assignment_section && <span className=\"error-message\">{errors.assignment_section.message}</span>}\n                                                            </div>\n                                                        </div>  \n                                                        <div className=\"col-md-6\">\n                                                            <div className=\"mb-3\">\n                                                                <label>Assignment Subject</label>\n                                                                <select className=\"form-select\" id=\"floatingSelectGrid\" {...register('assignment_subject', { required: 'This field is required.' })}> \n                                                                    <option value=\"\">Select Subject</option>\n                                                                    { (subjectData)?subjectData.map((subjectItem,key)=>{\n                                                                        return(  \n                                                                            <option value={subjectItem._id} key={key}>{subjectItem.subject_name}</option> \n                                                                        )}):''\n                                                                    }  \n                                                                </select>\n                                                                {errors.assignment_subject && <span className=\"error-message\">{errors.assignment_subject.message}</span>}\n                                                            </div>\n                                                        </div>  \n                                                        <div className=\"col-md-6\">\n                                                            <div className=\"mb-3\">\n                                                                <label>Assignment Deadline</label>\n                                                                <input className=\"form-control\" type=\"date\" {...register('assignment_deadline', { required: 'This field is required.' })} />\n                                                                {errors.assignment_deadline && <span className=\"error-message\">{errors.assignment_deadline.message}</span>}\n                                                            </div>\n                                                        </div> \n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"mb-3\">\n                                                                <label>Assignment Title</label>\n                                                                <input className=\"form-control\" type=\"text\" placeholder=\"Assignment Title\" {...register('assignment_title', { required: 'This field is required.' })} />\n                                                                {errors.assignment_title && <span className=\"error-message\">{errors.assignment_title.message}</span>} \n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-md-12\">\n                                                            <div className=\"mb-3\">\n                                                                <label>Assignment Description</label>\n                                                                <textarea placeholder=\"Assignment Description\" className=\"form-control\" type=\"text\" {...register('assignment_description', { required: 'This field is required.' })} />\n\n                                                                {errors.assignment_description && <span className=\"error-message\">{errors.assignment_description.message}</span>} \n                                                            </div>\n                                                        </div>  \n                                                        <div className=\"col-md-6\"> \n                                                            <div className=\"form-check form-switch\">\n                                                                <input className=\"form-check-input\" id=\"flexSwitchCheckDefault\" type=\"checkbox\" role=\"switch\" {...register('is_active', { required: false })} />\n                                                                <label className=\"form-check-label\"  for=\"flexSwitchCheckDefault\">Is Active</label>\n                                                            </div>\n                                                        </div>\n                                                    </div>  \n                                                    <div className=\"row\">\n                                                        <div className=\"col\">\n                                                            <div className=\"text-end\">   \n                                                                <button type=\"submit\" className=\"btn btn-success-gradien border-dark me-3\">\n                                                                    <b>Add</b>\n                                                                </button>\n                                                                <button type=\"reset\" className=\"btn btn-danger-gradien border-dark\">\n                                                                    <b>Reset</b>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n                </div>\n            </div> \n        </div>    \n    </>\n    )\n}"],"names":["AddExamSchedule","pageName","useState","title_1","title_2","title_3","title_4","title_5","data","setData","classData","setClassData","sectionData","setSectionData","subjectData","setSubjectData","dataID","setDataID","bulkRecordID","setBulkRecordID","deleteDisabled","setDeleteDisabled","loaderVisible","setLoaderVisible","register","handleSubmit","formState","errors","setValue","reset","useForm","addRecord","useAddMutation","editRecord","useEditMutation","deleteRecord","useDeleteMutation","deleteBulkRecord","useDeleteBulkMutation","getAllRecord","getAllValidationRecord","useLazyListQuery","getParticularRecord","useLazyParticularQuery","getAllClassRecord","getAllValidationClassRecord","useLazyClassListQuery","columns","name","selector","row","key","width","assignment_title","_jsxs","children","class_data","class_name","section_data","section_name","subject_data","subject_name","is_active","_jsx","className","_Fragment","onClick","openEditModal","_id","title","deleteData","resetSubmit","document","getElementById","click","async","record_id","then","response","assignment_description","assignment_class","assignment_deadline","updateSectionData","setTimeout","assignment_section","assignment_subject","catch","err","toast","error","concat","message","window","confirm","_response$data3","status","success","useEffect","_response$data5","_response$data6","select_id","select_data","options","selectedIndex","id","JSON","parse","class_section","class_subject","class","Link","to","href","type","_response$data4","deleteBulkData","disabled","DataTable","pagination","selectableRows","onSelectedRowsChange","_ref","selectedRows","selected_value","map","push","length","persistTableHead","tabindex","role","method","onSubmit","_response$data","_response$data2","encType","required","onChange","e","target","value","classItem","stringify","sectionItem","subjectItem","placeholder","for"],"sourceRoot":""}