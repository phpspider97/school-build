{"version":3,"file":"static/js/170.e55f5ffc.chunk.js","mappings":"gNAQe,SAASA,IACpB,MAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,CACzBC,QAAU,aACVC,QAAU,yBACVC,QAAU,cACVC,QAAU,SACVC,QAAU,0BAGPC,EAAKC,IAAWP,EAAAA,EAAAA,UAAS,KACzBQ,EAAQC,IAAaT,EAAAA,EAAAA,UAAS,IAC9BU,EAAaC,IAAmBX,EAAAA,EAAAA,UAAS,KACzCY,EAAeC,IAAqBb,EAAAA,EAAAA,WAAS,IAC7Cc,EAAcC,IAAoBf,EAAAA,EAAAA,WAAS,IAE5C,SAACgB,EAAQ,aAAEC,EAAcC,WAAW,OAAEC,GAAQ,SAAEC,EAAQ,MAAEC,IAASC,EAAAA,EAAAA,OAElEC,IAAaC,EAAAA,EAAAA,OACbC,IAAcC,EAAAA,EAAAA,OACdC,IAAgBC,EAAAA,EAAAA,MAChBC,IAAoBC,EAAAA,EAAAA,OACpBC,GAAczB,KAAK0B,KAA2BC,EAAAA,EAAAA,OAC9CC,IAAuBC,EAAAA,EAAAA,MAExBC,EAAU,CACZ,CACEC,KAAM,IACNC,SAAUA,CAACC,EAAIC,IAAQA,EAAI,EAC3BC,MAAM,QAER,CACEJ,KAAM,QACNC,SAAUC,GAAOA,EAAIG,cAEvB,CACIL,KAAM,OACNC,SAAUC,GAAOA,EAAII,kBAEzB,CACIN,KAAM,SACNC,SAAUC,GAA0B,IAAlBA,EAAIK,WAAiBC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wCAAuCC,SAAC,YAAcF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uCAAsCC,SAAC,eAExK,CACIV,KAAM,SACNC,SAAUC,IAAOS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACbF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAAgDI,QAASA,KAAKC,EAAcZ,EAAIa,IAAI,EAAGC,MAAM,iBAC1GR,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oDAAoDI,QAASA,KACtEI,EAAWf,EAAIa,KACfrC,GAAiB,EAAK,EACvBsC,MAAM,uBAIfE,EAAcA,KAChBlC,IACAZ,EAAU,GACV+C,SAASC,eAAe,eAAeC,QACvC3C,GAAiB,EAAM,EA6BrBoC,EAAgBQ,UAClBlD,EAAUmD,GACVJ,SAASC,eAAe,cAAcC,QACtCxB,EAAoB0B,GAAWC,MAAMC,IACjC1C,EAAS,eAAgB0C,EAASxD,KAAKA,KAAKoC,cAC5CtB,EAAS,mBAAoB0C,EAASxD,KAAKA,KAAKqC,kBAChDvB,EAAS,qBAAsB0C,EAASxD,KAAKA,KAAKyD,oBAClD3C,EAAS,YAAa0C,EAASxD,KAAKA,KAAKsC,UAAU,IACpDoB,OAAOC,IACNC,EAAAA,GAAMC,MAAM,WAADC,OAAYH,EAAII,UAC3BtD,GAAiB,EAAM,GACzB,EAEAuC,EAAaK,WAEa,IAAzBW,OAAOC,QADC,wCAEP5C,EAAaiC,GAAWC,MAAMC,IAAY,IAADU,EAC1B,OAARV,QAAQ,IAARA,GAAc,QAANU,EAARV,EAAUxD,YAAI,IAAAkE,GAAdA,EAAgBC,QACfP,EAAAA,GAAMQ,QAAQZ,EAASxD,KAAK+D,SAC5BtD,GAAiB,IAEjBmD,EAAAA,GAAMC,MAAML,EAASK,MAAM7D,KAAK+D,QACpC,IACDL,OAAOC,IACNC,EAAAA,GAAMC,MAAM,WAADC,OAAYH,EAAII,SAAU,GAE7C,GAmBJM,EAAAA,EAAAA,YAAU,KACN5C,IAAe8B,MAAMC,IAAY,IAADc,EAC5BrE,EAAgB,OAARuD,QAAQ,IAARA,GAAc,QAANc,EAARd,EAAUxD,YAAI,IAAAsE,OAAN,EAARA,EAAgBtE,MACxBS,GAAiB,EAAM,IACxBiD,OAAOC,IACNC,EAAAA,GAAMC,MAAM,WAADC,OAAYH,EAAII,SAAU,GACvC,GACJ,CAACrC,IAcH,OACIa,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,CAAAF,UACIC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACrBjC,GACD+B,EAAAA,EAAAA,KAAA,OAAKgC,MAAM,iBAAgB9B,UACvBF,EAAAA,EAAAA,KAAA,OAAKgC,MAAM,eAAc9B,UACrBF,EAAAA,EAAAA,KAAA,OAAKgC,MAAM,iBAEZ,IACPhC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAACF,EAAAA,EAAAA,KAAA,MAAAE,SAAKhD,EAAS,GAAGE,aAChD4C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC1BC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,aAAYC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC3BF,EAAAA,EAAAA,KAAA,KAAGiC,KAAK,IAAG/B,UACPF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,OAAKiC,KAAK,qDAItBjC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,SAAEhD,EAAS,GAAGE,uBAMxE4C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACOnC,EAKF,IAJDiC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gCAAgCiC,KAAK,SAAS7B,QAASA,KA1E1FS,YAES,IAAzBW,OAAOC,QADC,wCAEP1C,EAAiBnB,GAAcmD,MAAMC,IAAY,IAADkB,EACjC,OAARlB,QAAQ,IAARA,GAAc,QAANkB,EAARlB,EAAUxD,YAAI,IAAA0E,GAAdA,EAAgBP,QACfP,EAAAA,GAAMQ,QAAQZ,EAASxD,KAAK+D,SAC5BtD,GAAiB,GACjBF,GAAkB,IAElBqD,EAAAA,GAAMC,MAAML,EAASK,MAAM7D,KAAK+D,QACpC,IACDL,OAAOC,IACNC,EAAAA,GAAMC,MAAM,WAADC,OAAYH,EAAII,SAAU,GAE7C,EA4DoHY,GAChFlE,GAAiB,EAAK,EAAKmE,SAAUtE,EAAemC,UAChDF,EAAAA,EAAAA,KAAA,KAAAE,SAAIhD,EAAS,GAAGG,aAIpB2C,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iCAAiCiC,KAAK,SAAS,iBAAe,QAAQ,iBAAe,+BAA+BI,GAAG,aAAajC,QAASA,IAAI7B,IAAQ0B,UACvKF,EAAAA,EAAAA,KAAA,KAAAE,SAAIhD,EAAS,GAAGE,kBAI5B4C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAACuC,EAAAA,GAAS,CACNhD,QAASA,EACT9B,KAAMA,EACN+E,YAAU,EACVC,gBAAc,EACdC,qBAjEnBC,IAAuB,IAAtB,aAAEC,GAAcD,EAClC3E,GAAkB,GAClB,IAAI6E,EAAiB,GACrBD,EAAaE,KAAKrF,IACdoF,EAAeE,KAAKtF,EAAK8C,IAAI,IAE9BsC,EAAeG,OAAO,GACrBhF,GAAkB,GAEtBF,EAAgB+E,EAAe,EAyDKI,kBAAgB,kBAS5CjD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAyCiD,SAAS,KAAKC,KAAK,SAAS,kBAAgB,wBAAwB,cAAY,OAAMjD,UAC9IF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,UAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAcqC,GAAG,wBAAuBpC,SAAEhD,EAAS,GAAGM,WACpEwC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBiC,KAAK,SAAS,kBAAgB,QAAQ,aAAW,QAAQI,GAAG,cAAcjC,QAASA,KAAKzC,EAAU,EAAE,QAE3IoC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,QAAMoD,OAAO,OAAOC,SAAUjF,GAxKpDX,IACA,IAAXE,GACCe,EAAUjB,GAAMuD,MAAMC,IAAY,IAADqC,EAClB,OAARrC,QAAQ,IAARA,GAAc,QAANqC,EAARrC,EAAUxD,YAAI,IAAA6F,GAAdA,EAAgB1B,OACfP,EAAAA,GAAMQ,QAAQZ,EAASxD,KAAK+D,SAE5BH,EAAAA,GAAMC,MAAML,EAASK,MAAM7D,KAAK+D,QACpC,IACDL,OAAOC,IACNC,EAAAA,GAAMC,MAAM,WAADC,OAAYH,EAAII,SAAU,IAEzCd,MAEA9B,EAAW,CAACjB,YAAUF,IAAOuD,MAAMC,IAAY,IAADsC,EAC/B,OAARtC,QAAQ,IAARA,GAAc,QAANsC,EAARtC,EAAUxD,YAAI,IAAA8F,GAAdA,EAAgB3B,OACfP,EAAAA,GAAMQ,QAAQZ,EAASxD,KAAK+D,SAE5BH,EAAAA,GAAMC,MAAML,EAASK,MAAM7D,KAAK+D,QACpC,IACDL,OAAOC,IACNC,EAAAA,GAAMC,MAAM,WAADC,OAAYH,EAAII,UAC3BtD,GAAiB,EAAM,IAE3BwC,IACJ,IAgJ0F8C,QAAQ,sBAAqBtD,UAC/EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOuB,YAAY,kBAAmBtF,EAAS,eAAgB,CAAEuF,SAAU,8BAC/GpF,EAAOuB,eAAgBG,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAiCC,SAAE5B,EAAOuB,aAAa2B,cAEhGrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,iBACPF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,eAAeiC,KAAK,OAAOuB,YAAY,kBAAmBtF,EAAS,mBAAoB,CAAEuF,SAAU,8BACnHpF,EAAOwB,mBAAoBE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAiCC,SAAE5B,EAAOwB,iBAAiB0B,cAExGrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,wBACPF,EAAAA,EAAAA,KAAA,YAAUC,UAAU,eAAeiC,KAAK,OAAOuB,YAAY,wBAAyBtF,EAAS,qBAAsB,CAAEuF,SAAU,8BAC9HpF,EAAO4C,qBAAsBlB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAiCC,SAAE5B,EAAO4C,mBAAmBM,cAG5GxB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,mBAAmBqC,GAAG,yBAAyBJ,KAAK,WAAWiB,KAAK,YAAahF,EAAS,YAAa,CAAEuF,UAAU,OACpI1D,EAAAA,EAAAA,KAAA,SAAOC,UAAU,mBAAoB0D,IAAI,yBAAwBzD,SAAC,uBAI9EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,SAASjC,UAAU,kDAAiDC,UAC7EF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WAEPF,EAAAA,EAAAA,KAAA,UAAQkC,KAAK,QAAQjC,UAAU,4CAA2CC,UACtEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6CAkBvE,C","sources":["Components/Admin/AddNotice.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'  \nimport {useForm} from \"react-hook-form\" \nimport DataTable from 'react-data-table-component'\nimport {toast} from 'react-toastify'\n//import {ThreeDots} from 'react-loader-spinner'  \n\nimport {useAddMutation, useEditMutation, useDeleteMutation, useDeleteBulkMutation, useLazyParticularQuery, useLazyListQuery} from '../../redux/api/NoticeApi.js'\n\nexport default function AddNotice() {\n    const [pageName] = useState([{\n        title_1 : 'ADD NOTICE',\n        title_2 : 'DELETE SELECTED NOTICE',\n        title_3 : \"EDIT NOTICE\",\n        title_4 : \"NOTICE\",\n        title_5 : \"ADD-MANAGE NOTICE'S\",\n    }])\n\n    const [data,setData] = useState([]) \n    const [dataID, setDataID] = useState(0) \n    const [bulkRecordID,setBulkRecordID] = useState([])\n    const [deleteDisabled,setDeleteDisabled] = useState(true)\n    const [loaderVisible,setLoaderVisible] = useState(true)    \n\n    const {register, handleSubmit, formState: { errors }, setValue, reset} = useForm()\n \n    const [addRecord] = useAddMutation() \n    const [editRecord] = useEditMutation()\n    const [deleteRecord] = useDeleteMutation()\n    const [deleteBulkRecord] = useDeleteBulkMutation()\n    const [getAllRecord,{data:getAllValidationRecord}] = useLazyListQuery()\n    const [getParticularRecord] = useLazyParticularQuery()\n \n    const columns = [\n        {\n          name: '#',\n          selector: (row,key) => key+1,\n          width:'50px'\n        },\n        {\n          name: 'Title',\n          selector: row => row.notice_title\n        },\n        {\n            name: 'Date',\n            selector: row => row.notice_date_time\n          },\n        {\n            name: 'Status',\n            selector: row => (row.is_active === 1)?<span className=\"badge rounded-pill badge-success me-1\">Active</span>:<span className=\"badge rounded-pill badge-danger me-1\">De-active</span>,\n        },\n        {\n            name: 'Action',\n            selector: row => <>  \n                <i className=\"icofont icofont-ui-edit me-2 edit-link-custom\" onClick={()=>{openEditModal(row._id)}} title=\"Edit record\"></i> \n                <i className=\"icofont icofont-ui-delete me-2 delete-link-custom\" onClick={()=>{   \n                    deleteData(row._id) \n                    setLoaderVisible(true)\n                }} title=\"Delete record\"></i>  \n            </>\n        },\n    ]\n    const resetSubmit = () => {  \n        reset() \n        setDataID(0)\n        document.getElementById('close-modal').click()\n        setLoaderVisible(false)\n    }\n    const onSubmit = (data) => { \n        if(dataID === 0){\n            addRecord(data).then((response)=>{\n                if(response?.data?.status){  \n                    toast.success(response.data.message) \n                }else{ \n                    toast.error(response.error.data.message) \n                }\n            }).catch((err)=>{ \n                toast.error(`Error : ${err.message}`)\n            })\n            resetSubmit()\n        }else{ \n            editRecord({dataID,...data}).then((response)=>{\n                if(response?.data?.status){  \n                    toast.success(response.data.message) \n                }else{ \n                    toast.error(response.error.data.message) \n                } \n            }).catch((err)=>{\n                toast.error(`Error : ${err.message}`)\n                setLoaderVisible(false)\n            })\n            resetSubmit()\n        }\n    }\n\n    const openEditModal = async (record_id) => {   \n        setDataID(record_id) \n        document.getElementById('open-modal').click() \n        getParticularRecord(record_id).then((response)=>{  \n            setValue(\"notice_title\", response.data.data.notice_title) \n            setValue(\"notice_date_time\", response.data.data.notice_date_time)    \n            setValue(\"notice_description\", response.data.data.notice_description)    \n            setValue(\"is_active\", response.data.data.is_active)  \n        }).catch((err)=>{\n            toast.error(`Error : ${err.message}`)\n            setLoaderVisible(false)\n        })\n    }\n    const deleteData = async (record_id) => {\n        let text = \"Are you sure to delete this record?\";\n        if(window.confirm(text) === true) {\n            deleteRecord(record_id).then((response)=>{\n                if(response?.data?.status){  \n                    toast.success(response.data.message)\n                    setLoaderVisible(false)\n                }else{ \n                    toast.error(response.error.data.message) \n                }\n            }).catch((err)=>{ \n                toast.error(`Error : ${err.message}`)\n            })\n        }\n    }\n    const deleteBulkData = async () => {\n        let text = \"Are you sure to delete this record?\";\n        if(window.confirm(text) === true) {\n            deleteBulkRecord(bulkRecordID).then((response)=>{\n                if(response?.data?.status){\n                    toast.success(response.data.message)\n                    setLoaderVisible(false)\n                    setDeleteDisabled(true)\n                }else{ \n                    toast.error(response.error.data.message) \n                }\n            }).catch((err)=>{ \n                toast.error(`Error : ${err.message}`)\n            })\n        }\n    }\n    \n    useEffect(()=>{  \n        getAllRecord().then((response)=>{ \n            setData(response?.data?.data) \n            setLoaderVisible(false)\n        }).catch((err)=>{ \n            toast.error(`Error : ${err.message}`)\n        })\n    },[getAllValidationRecord])\n\n    const handleChange = ({ selectedRows }) => {\n        setDeleteDisabled(true)\n        let selected_value = []\n        selectedRows.map((data)=>{\n            selected_value.push(data._id)\n        })\n        if(selected_value.length>0){\n            setDeleteDisabled(false)\n        }\n        setBulkRecordID(selected_value) \n    }\n    \n    return ( \n        <>   \n            <div className=\"page-body\">\n                {loaderVisible?\n                <div class=\"loader-wrapper\">\n                    <div class=\"theme-loader\">    \n                        <div class=\"loader-p\"></div>\n                    </div>\n                </div>:''} \n                <div className=\"container-fluid\">\n                    <div className=\"page-title\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6 ps-0\"><h3>{pageName[0].title_1}</h3></div>\n                            <div className=\"col-sm-6 pe-0\">\n                                <ol className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\">\n                                        <a href=\"#\">\n                                            <svg className=\"stroke-icon\">\n                                                <use href=\"../assets/svg/icon-sprite.svg#stroke-home\"></use>\n                                            </svg>\n                                        </a>\n                                    </li> \n                                    <li className=\"breadcrumb-item active\">{pageName[0].title_1}</li>\n                                </ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"card\">\n                                <div className=\"card-body custom-card-list\">\n                                    <div className=\"list-product-header\">\n                                        <div> \n                                            {(!deleteDisabled)?\n                                            <button className=\"btn btn-danger-gradien btn-sm\" type=\"button\" onClick={()=> { deleteBulkData() \n                                            setLoaderVisible(true) } } disabled={deleteDisabled}>\n                                                <b>{pageName[0].title_2}</b>\n                                            </button> \n                                            :''}\n\n                                            <button className=\"btn btn-primary-gradien btn-sm\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\".bd-example-modal-fullscreen\" id=\"open-modal\" onClick={()=>reset()}>\n                                                <b>{pageName[0].title_1}</b>\n                                            </button> \n                                        </div> \n                                    </div>\n                                    <div className=\"list-product\">\n                                        <DataTable\n                                            columns={columns}\n                                            data={data}\n                                            pagination\n                                            selectableRows\n                                            onSelectedRowsChange={handleChange}  \n                                            persistTableHead \n                                        />  \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div> \n\n                <div className=\"modal fade bd-example-modal-fullscreen\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myFullLargeModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-fullscreen\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\" id=\"myFullLargeModalLabel\">{pageName[0].title_5}</h4>\n                            <button className=\"btn-close py-1\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\" id=\"close-modal\" onClick={()=>{setDataID(0)}}></button>\n                        </div>\n                        <div className=\"modal-body dark-modal\"> \n                            <div className=\"row border-dark\">\n                                <div className=\"col-sm-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-body\">\n                                            <form method=\"POST\" onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\n                                                <div className=\"form theme-f\">\n                                                    <div className=\"row\"> \n                                                        <div className=\"col-md-6 mb-3\">\n                                                            <label>Notice Title</label>\n                                                            <input className=\"form-control\" type=\"text\" placeholder=\"Notice Title\" {...register('notice_title', { required: 'This field is required.' })}/>\n                                                            {errors.notice_title && <p className=\"text-danger error-custom-single\">{errors.notice_title.message}</p>}\n                                                        </div> \n                                                        <div className=\"col-md-6 mb-3\">\n                                                            <label>Notice Date</label>\n                                                            <input className=\"form-control\" type=\"date\" placeholder=\"Notice Title\" {...register('notice_date_time', { required: 'This field is required.' })}/>\n                                                            {errors.notice_date_time && <p className=\"text-danger error-custom-single\">{errors.notice_date_time.message}</p>}\n                                                        </div> \n                                                        <div className=\"col-md-12 mb-3\">\n                                                            <label>Notice Description</label>\n                                                            <textarea className=\"form-control\" type=\"text\" placeholder=\"Notice Description\" {...register('notice_description', { required: 'This field is required.' })}/>\n                                                            {errors.notice_description && <p className=\"text-danger error-custom-single\">{errors.notice_description.message}</p>}\n                                                        </div> \n                                                            \n                                                        <div className=\"col-md-12\"> \n                                                            <div className=\"form-check form-switch\">\n                                                                <input className=\"form-check-input\" id=\"flexSwitchCheckDefault\" type=\"checkbox\" role=\"switch\" {...register('is_active', { required: false })} />\n                                                                <label className=\"form-check-label\"  for=\"flexSwitchCheckDefault\">Is Active</label>\n                                                            </div>\n                                                        </div>            \n                                                    </div> \n                                                    <div className=\"row\">\n                                                        <div className=\"col\">\n                                                            <div className=\"text-end\">   \n                                                                <button type=\"submit\" className=\"btn btn-primary-gradien btn-lg border-dark me-3\">\n                                                                    <b>Add</b>\n                                                                </button>\n                                                                <button type=\"reset\" className=\"btn btn-danger-gradien btn-lg border-dark\">\n                                                                    <b>Reset</b>\n                                                                </button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n                </div>\n            </div> \n        </div>    \n    </>\n    )\n}"],"names":["AddNotice","pageName","useState","title_1","title_2","title_3","title_4","title_5","data","setData","dataID","setDataID","bulkRecordID","setBulkRecordID","deleteDisabled","setDeleteDisabled","loaderVisible","setLoaderVisible","register","handleSubmit","formState","errors","setValue","reset","useForm","addRecord","useAddMutation","editRecord","useEditMutation","deleteRecord","useDeleteMutation","deleteBulkRecord","useDeleteBulkMutation","getAllRecord","getAllValidationRecord","useLazyListQuery","getParticularRecord","useLazyParticularQuery","columns","name","selector","row","key","width","notice_title","notice_date_time","is_active","_jsx","className","children","_jsxs","_Fragment","onClick","openEditModal","_id","title","deleteData","resetSubmit","document","getElementById","click","async","record_id","then","response","notice_description","catch","err","toast","error","concat","message","window","confirm","_response$data3","status","success","useEffect","_response$data5","class","href","type","_response$data4","deleteBulkData","disabled","id","DataTable","pagination","selectableRows","onSelectedRowsChange","_ref","selectedRows","selected_value","map","push","length","persistTableHead","tabindex","role","method","onSubmit","_response$data","_response$data2","encType","placeholder","required","for"],"sourceRoot":""}